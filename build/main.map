{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/countries.js","webpack:///./src/currency.js","webpack:///./src/index.js","webpack:///./src/namesCapitalMap.js","webpack:///./src/namesCapitals.js","webpack:///./src/namesCountry.js","webpack:///./src/namesCountryMap.js","webpack:///./src/oneCountry.js","webpack:///./src/oneRegionName.js","webpack:///./src/oneSubRegionName.js","webpack:///./src/routes.js","webpack:///external \"body-parser\"","webpack:///external \"express\""],"names":["router10","express","Router","countryJs","JSON","parse","stringify","country","post","req","res","status","send","console","log","body","router9","listCountriesByCurrency","get","i","length","currency","currencies","params","name","push","SERVER_PORT","process","env","app","listen","use","router","getJson","next","router2","router3","router4","router5","router6","router7","router8","bodyParser","json","urlencoded","extended","listCapitalMap","map","capital","listname","x","listnameMap","listCountriesByRegion","regionName","region","subregionName","subregion"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import express from 'express';\nimport country from \"./country.json\";\nconst router10 = express.Router();\n\n\nlet countryJs = JSON.parse(JSON.stringify(country));\n\n\n\nrouter10.post('/:countryName', (req, res) => {\n    res.status(200).send(\"ça marche bien\");\n    console.log(req.body);\n});\n\n\n\n\nexport default router10;","\n//IMPORTATION DU MODULE EXPRESS\nimport express from 'express';\n//IMPORTATION DU FICHIER COUNTRY.JSON\nimport country from \"./country.json\";\n\nconst router9 = express.Router();\nlet countryJs = JSON.parse(JSON.stringify(country));\n\n\nlet listCountriesByCurrency = [];\n\n\nrouter9.get('/:currency', (req, res) => {\n    for (let i = 0; i < countryJs.length; i++) {\n        let currency = countryJs[i].currencies;\n        if (req.params.currency === currency[0].name) {\n            listCountriesByCurrency.push(countryJs[i].name)\n        };\n    };\n    res.status(200).send(listCountriesByCurrency)\n});\n\n// let currency = countryJs[0].currencies;\n// console.log(currency[0].name);\n\n\nexport default router9;","//ETAPE 14 : INSTALLATION DE LA DEPENDANCE BODY-PARSER POUR FAIRE DES POSTES DANS LE SERVEUR\nimport bodyParser from 'body-parser';\n\n//ETAPE 1 : INSTALLATION D'EXPRESS\nimport express from 'express';\n\n//IMPORTATION DU FICHIER JSON\nimport country from './country.json';\n\n//IMPORTATIONS DES ROUTES\nimport router from './routes';\nimport router2 from './namesCountry';\nimport router3 from './namesCountryMap';\nimport router4 from './namesCapitals';\nimport router5 from './namesCapitalMap';\nimport router6 from './oneCountry';\nimport router7 from './oneRegionName';\nimport router8 from './oneSubRegionName';\nimport router9 from './currency';\nimport router10 from './countries';\n\n\n//ETAPE 1 : CREATION DU SERVEUR\nconst { SERVER_PORT } = process.env;\n//console.log(SERVER_PORT);\nconst app = express();\napp.listen(SERVER_PORT, () =>\n    console.log(`[Express] is running on ${SERVER_PORT}`))\n\n\n//ETAPE 2 : CREATION D'UNE ROUTE POUR AFFICHER LE NOM DES PROFESSEURS\napp.use('/teachersName', router);\n\n//ETAPE 3 : CREATION D'UN FICHIER JSON DANS LEQUEL SE TROUVE TOUTES LES DONNÉES DES PAYS ==> COUNTRY.JSON\n\n\n//ETAPE 4 : CREATION D'UNE ROUTE POUR AFFICHER LES DONNÉES DES PAYS ==> LOCALHOST:1179:/ALL\n//CREATION DE LA FONCTION\nfunction getJson(req, res, next) {\n    res.send(country);\n}\n//LIEN  \napp.use('/all', getJson);\n\n\n//ETAPE 5 : LIEN POUR OBTENIR LA LISTE DES PAYS AVEC LE LOOP ==> LOCALHOST:1179/NAMECOUNTRIES\napp.use('/nameCountries', router2);\n\n//ETAPE 6 : LIEN POUR OBTENIR LA LISTE DES PAYS AVEC LE MAP ==> LOCALHOST:1179/NAMECOUNTRIESMAP\n\napp.use('/nameCountriesMap', router3);\n\n//ETAPE 7 : LIEN POUR OBTENIR LA LISTE DES CAPITALES AVEC LE LOOP \n\napp.use('/nameCapitals', router4);\n\n//ETAPE 8 : LIEN POUR OBTENIR LA LISTE DES CAPITALES AVEC LE MAP \n\napp.use('/nameCapitalMap', router5);\n\n//ETAPE 9 : LIEN POUR OBTENIR UN PAYS EN PARTICULIER\n\napp.use('/', router6);\n\n//ETAPE 10 : LIEN POUR OBTENIR LA LISTE DES PAYS D'UNE REGION\napp.use('/regions/', router7);\n\n//ETAPE 11 : LIEN POUR OBTENIR LA LISTE DES PAYS QUI APPARATIENNENT À LA MÊME SOUS RÉGIONS \napp.use('/subregions/', router8);\n\n//ETAPE 12 : LE LIEN POUR OBTENIR LA LISTE DES PAYS QUI ONT LA MÊME DEVISE\napp.use('/currencies/', router9);\n\n//ETAPE 13 : INSTALLATION DE POSTMAN\n\n//ETAPE 14 : \napp.use(bodyParser.json()) //--> pour parser un json\napp.use(bodyParser.urlencoded({extended:true})) //--> pour parser correctement\napp.use('/countries', router10);\n\n//----------------------------------------------------------------------------------------------A PLACER À LA FIN DU FICHIER--------------------\n\n//CREATION D'UN MESSAGE D'ERREUR EN CAS DE MAUVAIS CHEMIN ==> MIDDLEWARE\napp.use(function (req, res, next) {\n    res.status(404).send(\"Cette page n'existe pas\");\n});","import express from 'express';\nimport country from \"./country.json\";\nconst router5 = express.Router();\n\n\nconst countryJs = JSON.parse(JSON.stringify(country));\n\nlet listCapitalMap = countryJs.map(country => country.capital);\n\n//CONTROLE\n//console.log(listname);\n\n\nrouter5.get('/', (req, res) => {\n    res.status(200).send(listCapitalMap);\n});\n\n\n\n\nexport default router5;","import express from 'express';\nimport country from \"./country.json\";\nconst router4 = express.Router();\n\n\nconst countryJs = JSON.parse(JSON.stringify(country));\n\nlet listname = [];\nfor (let i = 0; i < countryJs.length; i++) {\n    let x = countryJs[i].capital;\n    listname.push(x);\n    //console.log(listname)\n}\n\nrouter4.get('/', (req, res) => {\n    res.status(200).send(listname);\n});\n\n\n\n\nexport default router4;\n\n\n\n\n\n\n\n\n\n","import express from 'express';\nimport country from \"./country.json\";\nconst router2 = express.Router();\n\n\nconst countryJs = JSON.parse(JSON.stringify(country));\n\nlet listname = [];\nfor (let i = 0; i < countryJs.length; i++) {\n    let x = countryJs[i].name;\n    listname.push(x);\n    //console.log(listname)\n}\n\nrouter2.get('/', (req, res) => {\n    res.status(200).send(listname);\n});\n\n\n\n\nexport default router2;\n\n\n\n\n\n\n\n\n\n","import express from 'express';\nimport country from \"./country.json\";\nconst router3 = express.Router();\n\n\nconst countryJs = JSON.parse(JSON.stringify(country));\n\nlet listnameMap = countryJs.map(country => country.name);\n\n//CONTROLE\n//console.log(listnameMap);\n\n\nrouter3.get('/', (req, res) => {\n    res.status(200).send(listnameMap);\n});\n\n\n\n\nexport default router3;","import express from 'express';\nimport country from \"./country.json\";\nconst router6 = express.Router();\nlet countryJs = JSON.parse(JSON.stringify(country));\n\n//controles\n// console.log(countryJs[0].name); ==> Afghanistan ==> OK\n//console.log(countryJs[0]); ==> toutes les données d'Afghanistan ==> Ok\n//console.log(country[1]);\n//console.log(country.length);\n\nrouter6.get('/:name', (req, res) => {\n    for (let i = 0; i < country.length; i++)\n        if (req.params.name === countryJs[i].name){\n             res.status(200).send(country[i]);\n        }      \n});\n\n\n\n\n\n\n\n\n\nexport default router6;","\n//IMPORTATION DU MODULE EXPRESS\nimport express from 'express';\n//IMPORTATION DU FICHIER COUNTRY.JSON\nimport country from \"./country.json\";\n\nconst router7 = express.Router();\nlet countryJs = JSON.parse(JSON.stringify(country));\n\n\n\n// for (let i = 0; i < country.length; i++) {\n//     if (\"Asia\" === countryJs[i].region) {\n//         listCountriesByRegion.push(countryJs[i].name)\n//     };\n// };\n// console.log(listCountriesByRegion);\nlet listCountriesByRegion = [];\n\nrouter7.get('/:regionName', (req, res) => {\n    for (let i = 0; i < countryJs.length; i++) {\n        if (req.params.regionName === countryJs[i].region) {\n            listCountriesByRegion.push(countryJs[i].name)\n        };\n    };\n    res.status(200).send(listCountriesByRegion)\n});\n\n\n\n\n\nexport default router7;","\n//IMPORTATION DU MODULE EXPRESS\nimport express from 'express';\n//IMPORTATION DU FICHIER COUNTRY.JSON\nimport country from \"./country.json\";\n\nconst router7 = express.Router();\nlet countryJs = JSON.parse(JSON.stringify(country));\n\n\n\n// for (let i = 0; i < country.length; i++) {\n//     if (\"Asia\" === countryJs[i].region) {\n//         listCountriesByRegion.push(countryJs[i].name)\n//     };\n// };\n// console.log(listCountriesByRegion);\nlet listCountriesByRegion = [];\n\nrouter7.get('/:subregionName', (req, res) => {\n    for (let i = 0; i < countryJs.length; i++) {\n        if (req.params.subregionName === countryJs[i].subregion) {\n            listCountriesByRegion.push(countryJs[i].name)\n        };\n    };\n    res.status(200).send(listCountriesByRegion)\n});\n\n\n\n\n\nexport default router7;","import express from 'express';\n\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => {\n    res.status(200).res.send ('thomas: \"Thomas Jamais\", alban: \"Alban Meurice\"')\n});\n\n\n\nexport default router;","module.exports = require(\"body-parser\");","module.exports = require(\"express\");"],"sourceRoot":""}